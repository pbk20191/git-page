const i=self;i.addEventListener("install",()=>i.skipWaiting());i.addEventListener("activate",t=>t.waitUntil(i.clients.claim()));i.addEventListener("message",t=>{if(t.data)t.data.type;else return});i.addEventListener("fetch",function(t){const s=t.request;if(s.cache==="only-if-cached"&&s.mode!=="same-origin"||s.url.includes(".wasm"))return;const r=s.mode==="no-cors"?new Request(s,{credentials:"omit"}):s,a=fetch(r,{signal:AbortSignal.timeout(5e3)}).catch(e=>(console.error("Fetch failed; returning offline page instead.",e),new Response("<h1>Offline</h1>",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/html","Cache-Control":"no-store","Cross-Origin-Embedder-Policy":"credentialless","Cross-Origin-Resource-Policy":"cross-origin","Cross-Origin-Opener-Policy":"same-origin"}}))).then(e=>{if(e.status===0)return e;const n=new Headers(e.headers);return n.set("Cross-Origin-Embedder-Policy","credentialless"),n.set("Cross-Origin-Opener-Policy","same-origin"),new Response(e.body,{status:e.status,statusText:e.statusText,headers:n})});t.respondWith(a)});
