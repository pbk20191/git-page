const i=self;i.addEventListener("install",()=>i.skipWaiting());i.addEventListener("activate",s=>s.waitUntil(i.clients.claim()));i.addEventListener("message",s=>{if(s.data)s.data.type;else return});i.addEventListener("fetch",function(s){const e=s.request;if(e.cache==="only-if-cached"&&e.mode!=="same-origin"||e.url.includes(".wasm"))return;console.log("fetch",e.url,e.mode,e.cache);const r=e.mode==="no-cors"?new Request(e,{credentials:"omit"}):e,a=fetch(r,{signal:AbortSignal.timeout(5e3)}).catch(t=>(console.error("Fetch failed; returning offline page instead.",t),new Response("<h1>Offline</h1>",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/html","Cache-Control":"no-store","Cross-Origin-Embedder-Policy":"credentialless","Cross-Origin-Resource-Policy":"cross-origin","Cross-Origin-Opener-Policy":"same-origin"}}))).then(t=>{if(t.status===0)return t;const n=new Headers(t.headers);return n.set("Cross-Origin-Embedder-Policy","credentialless"),n.set("Cross-Origin-Opener-Policy","same-origin"),new Response(t.body,{status:t.status,statusText:t.statusText,headers:n})});s.respondWith(a)});
